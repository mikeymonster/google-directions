@page
@using poc.Google.Directions.Models
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Journey Directions POC</h1>
</div>

<section class="search">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <fieldset>
                <label asp-for="Postcode" class="control-label">Postcode</label>
                <input asp-for="Postcode" class="form-control" placeholder="Enter a postcode" aria-label="Enter a postcode" />
                <span asp-validation-for="Postcode" class="text-danger"></span>
            </fieldset>
        </div>

        <div class="form-group">
            <label asp-for="UseBusTransitMode" class="control-label">Train</label>
            <input type="checkbox" asp-for="UseTrainTransitMode">

            <label asp-for="UseBusTransitMode" class="control-label">Bus</label>
            <input type="checkbox" asp-for="UseBusTransitMode">
        </div>

        <div class="form-group">
            <label asp-for="RankPlacesByDistance" class="control-label">Rank places by distance</label>
            <input type="checkbox" asp-for="RankPlacesByDistance">
        </div>

        <button id="search-button" type="submit">Search</button>
    </form>
    <p>Searching from <strong>@Model.Postcode</strong></p>
</section>

<section class="providers">
    @if(Model.Providers != null)
    {
        @foreach (var provider in Model.Providers)
        {
            Journey journey = null;
            Places places = null;

            Model.Journeys?.TryGetValue(provider.Postcode, out journey);
            Model.PlacesList?.TryGetValue(provider.Postcode, out places);

            var distance = journey != null ? Math.Round(journey.Distance, 1) : 0;
            var distanceFromBusStop = journey != null ? Math.Round(journey.DistanceFromNearestBusStop, 1) : 0;
            var distanceFromTrainStop = journey != null ? Math.Round(journey.DistanceFromNearestTrainStop, 1) : 0;

            var directionsLink = provider.DirectionsLink ?? "#";

            <article class="provider">
                <section class="provider-info">
                    <header class="provider-info-header">
                        <h3>@provider.Name</h3>
                        <h4>POST CODE | Town</h4>
                        <h4>@provider.Postcode | @provider.Town</h4>
                    </header>

                    <div class="journey-info">
                        <p class="distance">@distance @(Math.Abs(distance - 1) < 0.1 ? "mile" : "miles") away</p>
                        <div class="transport">
                            <img src="~/images/transport.png" alt="" />
                            <p class="transit-distance">@($"{distanceFromBusStop:0.#}") @(Math.Abs(distanceFromBusStop -1) < 0.1 ? "mile" : "miles")</p>
                        </div>
                        <p class="transit-description">from the nearest bus stop</p>

                        <div class="transport">
                            <img src="~/images/subway.png" alt="" />
                            <p class="transit-distance">@($"{distanceFromTrainStop:0.#}") @(Math.Abs(distanceFromTrainStop - 1) < 0.1 ? "mile" : "miles")</p>
                        </div>
                        <p class="transit-description">from the nearest train station</p>
                        <p class="transit-description"><a target="_blank" href="(@directionsLink">How do I get there?</a></p>
                    </div>
                </section>

                @if (journey != null)
                {
                    <section class="journey-details">
                        <details open>
                            <summary>Journey details:</summary>
                            @if (journey.Routes != null && journey.Routes.Any())
                            {
                                <ul>
                                    @foreach (var route in journey.Routes)
                                    {
                                        <li>
                                            <h3>Route</h3>
                                            @if (!string.IsNullOrWhiteSpace(route.Summary))
                                            {
                                                <p>@route.Summary</p>
                                            }
                                            @foreach (var warning in route.Warnings)
                                            {
                                                <p class="warning"><strong>WARNING:</strong> @warning</p>
                                            }
                                            <ul>
                                                @foreach (var leg in route.Legs)
                                                {
                                                    <li>
                                                        <p>From <em>@leg.StartAddress</em></p>
                                                        <p>to <em>@leg.EndAddress</em>: @leg.DistanceString @leg.Duration</p>
                                                        <ul>
                                                            @foreach (var step in leg.Steps)
                                                            {
                                                                <li class="step-description">
                                                                    <p><strong>@step.TravelMode </strong>@step.DistanceString, @step.DurationString</p>
                                                                    <p>@step.Instructions</p>
                                                                    <p><strong>Start: </strong>@step.StartLatitude, @step.StartLongitude</p>
                                                                    <p><strong>End: </strong>@step.EndLatitude, @step.EndLongitude</p>

                                                                    @if (!string.IsNullOrWhiteSpace(step.TransitDetails.LineName))
                                                                    {
                                                                        <p><strong>Line: </strong>@step.TransitDetails.LineName (@step.TransitDetails.LineShortName)</p>
                                                                        <p><strong>Departure stop: </strong>@step.TransitDetails.DepartureStopName - @step.TransitDetails.DepartureStopLatitude, @step.TransitDetails.DepartureStopLatitude</p>
                                                                        <p><strong>Arrival stop: </strong>@step.TransitDetails.ArrivalStopName - @step.TransitDetails.ArrivalStopLatitude, @step.TransitDetails.ArrivalStopLatitude</p>
                                                                    }

                                                                    @if (!string.IsNullOrWhiteSpace(step.TransitDetails.LineVehicleType))
                                                                    {
                                                                        <p class="vehicle-details"><strong>Line: </strong>@step.TransitDetails.LineVehicleType (@step.TransitDetails.LineVehicleName)</p>
                                                                    }
                                                                </li>
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                </ul>
                            }
                        </details>

                        <details>
                            <summary>Raw journey json:</summary>
                            <pre>
                            <code>
                                    @journey.RawJson
                                </code>
                            </pre>
                        </details>
                    </section>
                }

                @if (places != null)
                {
            <section class="journey-details">
                <details open>
                    <summary>Places details:</summary>
                    @if (places.PlaceList != null && places.PlaceList.Any())
                    {
                        <ul>
                            @foreach (var place in places.PlaceList)
                            {
                                <li>
                                    <h3>@place.Name</h3>
                                    <p><strong>Location: </strong>@place.Latitude, @place.Longitude</p>
                                    <ul>
                                        @foreach (var placeType in place.Types)
                                        {
                                            <li>
                                                <p>@placeType</p>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    }
                </details>

                <details>
                    <summary>Raw places json:</summary>
                    <pre>
                        <code>
                            @places.RawJson
                        </code>
                    </pre>
                </details>
            </section>
                }
            </article>
        }
    }
    
    @if (Model.Journeys != null && Model.Journeys.Any())
    {
        <footer>
            <img src="~/images/poweredbygoogle.png" alt="Powered by Google" class="google--logo"/>
        </footer>
    }
</section>
